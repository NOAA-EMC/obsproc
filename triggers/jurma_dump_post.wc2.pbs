#!/bin/bash
#PBS -N obsproc_%JTYP%_dump_post_%DESC%_%CC%
#PBS -o /lfs/h2/emc/ptmp/Praveen.Kumar/obsproc_%JTYP%_dump_post_%PDY%_%CC%_%DESC%.o%J
#PBS -e /lfs/h2/emc/ptmp/Praveen.Kumar/obsproc_%JTYP%_dump_post_%PDY%_%CC%_%DESC%.o%J
#PBS -l walltime=1:00:00
#PBS -A OBSPROC-DEV
#PBS -q dev
#PBS -l place=vscatter,select=1:ncpus=7:mem=4gb

## WCOSS1
##BSUB -J %JTYP%_dump_post_%DESC%_%CC%
##BSUB -o /gpfs/dell2/ptmp/Praveen.Kumar/%JTYP%_dump_post_%PDY%_%CC%_%DESC%.o%J
##BSUB -L /bin/sh
##BSUB -cwd /gpfs/dell2/ptmp/%U
##BSUB -W 00:10
##BSUB -P OBSPROC-T2O
###BSUB -q dev
##BSUB -q debug
##BSUB -M 3000

#####################################################################
# Submit notes:
# For specific PDY:
# > jtyp=urma cyc=00 PDY=20170126 desc=somethingfun cycqsub jurma_*.ph3.pbs
# For latest/current PDY:
# > jtyp=urma cyc=00 cycqsub jurma_*.ph3.pbs
# cycqsub location: /u/Praveen.Kumar/bin
#####################################################################

NCPU=`wc -l < $PBS_NODEFILE`
echo ------------------------------------------------------
echo ' This job is allocated on '${NCPU}' cpu(s)'
echo 'Job is running on node(s): '
cat $PBS_NODEFILE
echo ------------------------------------------------------
echo PBS: qsub is running on $PBS_O_HOST
echo PBS: originating queue is $PBS_O_QUEUE
echo PBS: executing queue is $PBS_QUEUE
echo PBS: working directory is $PBS_O_WORKDIR
echo PBS: execution mode is $PBS_ENVIRONMENT
echo PBS: job identifier is $PBS_JOBID
echo PBS: job name is $PBS_JOBNAME
echo PBS: node file is $PBS_NODEFILE
echo PBS: current home directory is $PBS_O_HOME
echo PBS: PATH = $PBS_O_PATH
echo ------------------------------------------------------

set -xa

export envir=prod
export cyc=%CC%
DESC=%DESC%
JTYP=%JTYP%
export job=${JTYP}_dump_$cyc
export jobid=$job.$PBS_JOBID

export KEEPDATA=YES
#export MPMD=NO  # uncomment if you do not provide poe BSUB cards

export PDY=%PDY%
PDYm1=$(date -d "${PDY} 1 day ago" +%Y%m%d)

userROOT=/lfs/h2/emc/obsproc/noscrub/$USER

export obsproc_ver=v1.0.0
export bufr_dump_ver=1.0.0
export HOMEobsproc=${userROOT}/obsproc-cmake

VERSION_FILE=${userROOT}/gitwkspc/obsproc/versions/run.ver
if [ -f $VERSION_FILE ]; then
   . $VERSION_FILE
else
 echo Need version info...  Exiting...
 exit 7
fi

#Load the modules
module load prod_util/${prod_util_ver}
module load prod_envir/${prod_envir_ver}

module load grib_util/${grib_util_ver}
module load util_shared/${util_shared_ver}
module load hdf5/${hdf5_ver}
module load netcdf/${netcdf_ver}
module load w3nco/${w3nco_ver}
module load w3emc/${w3emc_ver}
module load bacio/${bacio_ver}
module load bufr_dump/${bufr_dump_ver}
module load bufr/${bufr_ver}

module load envvar/${envvar_ver}
module load PrgEnv-intel/${PrgEnv_intel_ver}
module load intel/${intel_ver}
module load craype/${craype_ver}
module load cray-mpich/${cray_mpich_ver}
module load cray-pals/${cray_pals_ver}
module load cfp/${cfp_ver}

#Check if they exist
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)prod_util/") -eq 0 ]]; then echo "prod_util is not loaded!"; fi
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)prod_envir/") -eq 0 ]]; then echo "prod_envir is not loaded!"; fi
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)util_shared/") -eq 0 ]]; then echo "util_shared is not loaded!"; fi
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)grib_util/") -eq 0 ]]; then echo "grib_util is not loaded!"; fi

if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)hdf5/") -eq 0 ]]; then echo "hdf5 is not loaded!"; fi
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)netcdf/") -eq 0 ]]; then echo "netcdf is not loaded!"; fi
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)w3nco/") -eq 0 ]]; then echo "w3nco is not loaded!"; fi
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)w3emc/") -eq 0 ]]; then echo "w3emc is not loaded!"; fi
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)bacio/") -eq 0 ]]; then echo "bacio is not loaded!"; fi
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)bufr_dump/") -eq 0 ]]; then echo "bufr_dump is not loaded!"; fi
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)bufr/") -eq 0 ]]; then echo "bufr is not loaded!"; fi

if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)envvar/") -eq 0 ]]; then echo "envvar is not loaded!"; fi
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)PrgEnv-intel/") -eq 0 ]]; then echo "PrgEnv-intel is not loaded!"; fi
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)intel/") -eq 0 ]]; then echo "intel is not loaded!"; fi
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)craype/") -eq 0 ]]; then echo "craype is not loaded!"; fi
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)cray-mpich/") -eq 0 ]]; then echo "cray-mpich is not loaded!"; fi
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)cray-pals/") -eq 0 ]]; then echo "cray-pals is not loaded!"; fi
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)cfp/") -eq 0 ]]; then echo "cfp is not loaded!"; fi

module unload bufr_dump # 2.0.0
module use ${userROOT}/bufr-dump-cmake/modulefiles
module load bufr_dump/$bufr_dump_ver  # use 1.0.0 for now

export SENDECF=NO  # developer
export SENDDBN=NO  # developer
export SENDSDM=NO  # developer

export DCOMROOT=/lfs/h1/ops/canned/dcom
export TANK=/lfs/h1/ops/canned/dcom

export DATAROOT=/lfs/h2/emc/ptmp/$USER
export jlogfile=$DATAROOT/${JTYP}_dump_post.$PDY.jlogfile

export DEBUG_LEVEL=3

# Need these settings only when cyc=23 and have local set of dump status 
# files to process
export COPY=YES
export HOMEarch=/lfs/h2/emc/ptmp/$USER/com/${JTYP}/prod/sdm_rtdm
export AVGDarch_IN=$HOMEarch/avgdata
export AVGDarch_OUT=$HOMEarch/avgdata
export OBCNTarch=$HOMEarch/obcount_30day

export COMIN=/lfs/h2/emc/ptmp/$USER/com/obsproc/${obsproc_ver}/${JTYP}.${PDY}
export COMOUT=/lfs/h2/emc/ptmp/$USER/com/obsproc/${obsproc_ver}/${JTYP}.${PDY}

$HOMEobsproc/jobs/JOBSPROC_URMA_DUMP_POST
exit

# Kick off prep job
err=$?
if [ $err -eq 0 ]; then
  unset LSB_SUB_RES_REQ
  jtyp=$JTYP PDY=$PDY desc=$DESC bash -l /u/$USER/bin/cycqsub \
  ${userROOT}/jobsWCOSS/URMA/jurma_prep.ph3.lsf.GFSv16
fi
