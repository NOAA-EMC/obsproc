Library versions and variables are defined by sourcing load_libs.rc_<software_unit>
which loads library modules.
  -- This is done for you in build.sh_<software_unit>.

With the consolidation of obsproc software units into one network, there are
build.sh_<software_unit> scripts.  There is no singular build.sh script as
different software units require different libraries.

To build select software units:
  ./build.sh_<software_unit> <some_code.fd ...>
For example:
  avgdata:
    ./build.sh_avgdata bufr_avgdata.fd
  dump_post:
    ./build.sh_dump_post bufr_datacount.fd bufr_listdumps.fd
  mods:
    ./build.sh_mods bufr_prepmods.fd
  prep:
    ./build.sh_prep prepobs_cqcbufr.fd prepobs_cqcvad.fd prepobs_glerladj.fd
    prepobs_listheaders.fd prepobs_monoprepbufr.fd prepobs_mpcopybufr.fd
    prepobs_oiqcbufr.fd prepobs_prepacpf.fd prepobs_prepacqc.fd prepobs_prepanow.fd
    prepobs_prepdata.fd prepobs_prevents.fd prepobs_profcqc.fd syndat_syndata.fd
  prep_post:
    ./build.sh_prep_post gdascounts_ave.fd global_postevents.fd timetwin.fd
  remorest:
    ./build.sh_remorest bufr_remorest.fd

(NOTE: If environment variable clobber is exported to build.sh_<software_unit> with
       value "clobber_no", then the make clobber step is skipped.  This may be
       useful if one is debugging only one source code for a program with multiple
       source codes.)
(NOTE: For those software_units with more than one program (dump_post, prep,
       prep_post), the build.sh_<software_unit> script can list 1, 2, up to all
       programs to be built.)
(NOTE: If on Theia, Hera, etc ... use:
       SITE=theia ./build.sh_<software_unit> <some_code.fd ...>)

To install builds (creating exec dir if necessary):
  ./install.sh
or
  ./install.sh <some_code.fd ...>

(NOTE: This assumes the exec dir belongs one directory back from this directory
       (and two directories back from each code directory). If you don't trust 
       install scripts and targets, don't use 'em.)
(NOTE: The install.sh script is universal and not differentiated by 
       software unit.)


To clean directories
  ./clean.sh
or
  ./clean.sh <some_code.fd ...>


(NOTE: The clean.sh script is universal and not differentiated by 
       software unit.)

Examples:
  ./build.sh_<software_unit> <some_code.fd ...>
  ./install.sh
  ./clean.sh
 - or, for a specific code -
  ./build.sh <some_code.fd ...>
  ./install.sh <some_code.fd ...>
  ./clean.sh <some_code.fd ...>
  
